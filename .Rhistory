h = 1,
image_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = 10,
h = 10,
image_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = 10,
h = 30,
image_url = imgURL)
figure() %>%
ly_image_url(
data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = 10,
h = 20,
image_url = imgURL
)
install.packages(slidiify)
install_github("slidify", "ramnathv")
devtools::install_github("slidify")
devtools::install_github("slidify", "ramnathv")
devtools::install_github(ramnathv/slidify)
devtools::install_github("ramnathv/slidify")
install.packages(c("BH", "curl", "devtools", "git2r", "httr", "installr", "jsonlite", "openssl", "palettetown", "plyr", "R6", "Rcpp", "rmarkdown", "rstudioapi", "rvest", "stringr", "tibble", "withr", "xml2"))
devtools::install_github("davergp/daveStyle")
library(rvest)
library(magrittr)
baseStats <-
xml2::read_html( # Read HTML or XML
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>% # This is a pipe operator from magrittr
rvest::html_node( # Extract pieces out of HTML using XPath and css selectors
css = "div table" # rvest recommends using 'Selector Gadget'
) %>%
rvest::html_table() # Parse an html table into a data frame
head(baseStats)
install.packages("revealjs")
install.packages("data.table")
install.packages("rvest")
library(rvest)
library(magrittr)
baseStats <-
xml2::read_html( # Read HTML or XML
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>% # This is a pipe operator from magrittr
rvest::html_node( # Extract pieces out of HTML using XPath and css selectors
css = "div table" # rvest recommends using 'Selector Gadget'
) %>%
rvest::html_table() # Parse an html table into a data frame
head(baseStats)
install.packages("XML")
library(rvest)
library(magrittr)
baseStats <-
xml2::read_html( # Read HTML or XML
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>% # This is a pipe operator from magrittr
rvest::html_node( # Extract pieces out of HTML using XPath and css selectors
css = "div table" # rvest recommends using 'Selector Gadget'
) %>%
rvest::html_table() # Parse an html table into a data frame
head(baseStats)
library(data.table)
baseStats <- data.table::as.data.table(baseStats)
# Remove second col with only "NA"
baseStats[, "" := NULL]
# Rename cols 1 and 2 to something workable
data.table::setnames(baseStats, 1:2, c("DexNo", "Pokemon"))
baseStats
library(stringr)
baseStats[, imgURL := read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>%
rvest::html_nodes(
css = "#mw-content-text img"
) %>% # css to identify all strings for pokemon urls
stringr::str_split_fixed(
"src=\"",
n = 2
) %>% .[,2] %>% # splits first part out then drops first part
stringr::str_split_fixed(
"\" width=",
n = 2) %>% .[,1]]
baseStats
dir.create("./someonesPC/")
# Use for loop as data.table only returns last if this is run within DT function
for(pkmn in baseStats[, DexNo]){
download.file(baseStats[pkmn == DexNo,
imgURL],
destfile = paste0("./someonesPC/", pkmn, ".png"),
mode = "wb") # Makes this work for windows
}
library(rbokeh)
P <- figure() %>%
ly_image_url(
data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = 10,
h = 20,
image_url = imgURL
)
install.packages("ggplot2")
install.packages("ggthemes")
install.packages("rbokeh")
library(rbokeh)
P <- figure() %>%
ly_image_url(
data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = 10,
h = 20,
image_url = imgURL
)
P
install.packages("devtools")
devtools::install_git("davergp/daveStyle")
devtools::install_github("davergp/daveStyle")
devtools::install_github("stephlocke/stephStyle")
devtools::install_github("stephlocke/stephStyle", force = TRUE)
rmarkdown::render("example.Rmd", output_format = stephStyle::stephRevealSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = stephStyle::stephRevealSlideStyle())
rmarkdown::render("example.Rmd", output_format = stephStyle::stephPDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = stephStyle::stephPDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = stephStyle::stephSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = stephStyle::stephRevealSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = stephStyle::stephPDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = stephStyle::stephSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = stephStyle::stephRevealSlideStyle())
baseStats
library(rbokeh)
P <- figure() %>%
ly_image_url(
data = baseStats,
x = DexNo,
y = Total,
w = 10,
h = 20,
image_url = imgURL
)
P
library(daveStyle)
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle(options = ))
options<-list(
width= 1280
,height= 800
,previewLinks= "true")
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle(options = options))
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle(options = options))
library(rvest)
library(magrittr)
baseStats <-
xml2::read_html( # Read HTML or XML
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>% # This is a pipe operator from magrittr
rvest::html_node( # Extract pieces out of HTML using XPath and css selectors
css = "div table" # rvest recommends using 'Selector Gadget'
) %>%
rvest::html_table() # Parse an html table into a data frame
head(baseStats)
library(rvest)
library(magrittr)
baseStats <-
xml2::read_html( # Read HTML or XML
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>% # This is a pipe operator from magrittr
rvest::html_node( # Extract pieces out of HTML using XPath and css selectors
css = "div table" # rvest recommends using 'Selector Gadget'
) %>%
rvest::html_table() # Parse an html table into a data frame
head(baseStats)
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle(options = options))
library(daveStyle)
options<-list(
width= 1280
,height= 800
,previewLinks= "true")
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle(options = options))
library(daveStyle)
options<-list(
width= 1280
,height= 800
,previewLinks= "true")
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle(options = options))
library(daveStyle)
options<-list(
width= 1280
,height= 800
,previewLinks= "true")
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle(options = options))
figure() %>%
ly_image_url(
data = baseStats,
x = DexNo,
y = Total,
w = 10,
h = 20,
image_url = imgURL
)
figure() %>%
ly_image_url(
data = baseStats,
x = DexNo,
y = Total,
w = 10,
h = 20,
image_url = imgURL
)
figure() %>%
ly_image_url(
data = baseStats,
x = DexNo,
y = Total,
image_url = imgURL
)
figure() %>%
ly_image_url(
data = baseStats,
x = DexNo,
y = Total,
w = 10,
h = 20,
image_url = imgURL
)
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle(options = options))
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle(options = options))
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
library(rvest)
library(magrittr)
baseStats <-
# Read HTML or XML
xml2::read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/
List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>% # This is a pipe operator from magrittr
# Extract pieces out of HTML using css selectors
rvest::html_node(
# rvest recommends using 'Selector Gadget'
css = "div table"
) %>%
# Parse an html table into a data frame
rvest::html_table()
head(baseStats)
library(rvest)
library(magrittr)
baseStats <-
# Read HTML or XML
xml2::read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>% # This is a pipe operator from magrittr
# Extract pieces out of HTML using css selectors
rvest::html_node(
# rvest recommends using 'Selector Gadget'
css = "div table"
) %>%
# Parse an html table into a data frame
rvest::html_table()
library(rvest)
library(magrittr)
baseStats <-
# Read HTML or XML
xml2::read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>% # This is a pipe operator from magrittr
# Extract pieces out of HTML using css selectors
rvest::html_node(
# rvest recommends using 'Selector Gadget'
css = "div table"
) %>%
# Parse an html table into a data frame
rvest::html_table()
head(baseStats)
library(data.table)
baseStats <- data.table::as.data.table(baseStats)
# Remove second col with only "NA"
baseStats[, "" := NULL]
# Rename cols 1 and 2 to something workable
data.table::setnames(baseStats,
1:2,
c("DexNo", "Pokemon"))
baseStats
library(rvest)
library(magrittr)
bulbagarden <- "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
baseStats <-
# Read HTML or XML
xml2::read_html(
x =
) %>% # This is a pipe operator from magrittr
# Extract pieces out of HTML using css selectors
rvest::html_node(
# rvest recommends using 'Selector Gadget'
css = "div table"
) %>%
# Parse an html table into a data frame
rvest::html_table()
library(rvest)
library(magrittr)
bulbagarden <- "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
baseStats <-
# Read HTML or XML
xml2::read_html(
x = bulbagarden
) %>% # This is a pipe operator from magrittr
# Extract pieces out of HTML using css selectors
rvest::html_node(
# rvest recommends using 'Selector Gadget'
css = "div table"
) %>%
# Parse an html table into a data frame
rvest::html_table()
library(stringr)
baseStats[, imgURL := read_html(
x = bulbagarden
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon urls
css = "#mw-content-text img"
) %>%
stringr::str_split_fixed(
"src=\"",
n = 2
) %>% .[,2] %>%
# splits first part out then drops first part
stringr::str_split_fixed(
"\" width=",
n = 2) %>% .[,1]]
bulbagarden
library(stringr)
baseStats[, imgURL := read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon urls
css = "#mw-content-text img"
) %>%
stringr::str_split_fixed(
"src=\"",
n = 2
) %>% .[,2] %>%
# splits first part out then drops first part
stringr::str_split_fixed(
"\" width=",
n = 2) %>% .[,1]]
# Chunk 1
library(rvest)
library(magrittr)
bulbagarden <- "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
baseStats <-
# Read HTML or XML
xml2::read_html(
x = bulbagarden
) %>% # This is a pipe operator from magrittr
# Extract pieces out of HTML using css selectors
rvest::html_node(
# rvest recommends using 'Selector Gadget'
css = "div table"
) %>%
# Parse an html table into a data frame
rvest::html_table()
# Chunk 2
head(baseStats)
# Chunk 3
library(data.table)
baseStats <- data.table::as.data.table(baseStats)
# Remove second col with only "NA"
baseStats[, "" := NULL]
# Rename cols 1 and 2 to something workable
data.table::setnames(baseStats,
1:2,
c("DexNo", "Pokemon"))
library(stringr)
baseStats[, imgURL := read_html(
x = bulbagarden
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon urls
css = "#mw-content-text img"
) %>%
stringr::str_split_fixed(
"src=\"",
n = 2
) %>% .[,2] %>%
# splits first part out then drops first part
stringr::str_split_fixed(
"\" width=",
n = 2) %>% .[,1]]
baseStats
imgURL := read_html(
# set x to be bulbagarden url
x = bulbagarden
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon urls
css = "#mw-content-text img"
)
read_html(
# set x to be bulbagarden url
x = bulbagarden
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon urls
css = "#mw-content-text img"
)
read_html(
# set x to be bulbagarden url
x = bulbagarden
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon urls
css = "#mw-content-text img"
) %>%
stringr::str_split_fixed(
"src=\"",
n = 2
)
read_html(
# set x to be bulbagarden url
x = bulbagarden
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon urls
css = "#mw-content-text img"
) %>%
# split string at point
stringr::str_split_fixed(
"src=\"",
n = 2
)
read_html(
# set x to be bulbagarden url
x = bulbagarden
)
read_html(
# set x to be bulbagarden url
x = bulbagarden
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon urls
css = "#mw-content-text img"
)
read_html(
# set x to be bulbagarden url
x = bulbagarden
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon image urls
css = "#mw-content-text img"
) %>%
# split string at point
stringr::str_split_fixed(
"src=\"",
n = 2
)
library(stringr)
# Use within data.table
baseStats[, imgURL := read_html(
# set x to be bulbagarden url
x = bulbagarden
) %>%
rvest::html_nodes(
# css to identify all strings for pokemon image urls
css = "#mw-content-text img"
) %>%
# split string at point
stringr::str_split_fixed(
"src=\"",
n = 2
) %>%
# use second part of string
.[,2] %>%
# split string at point again
stringr::str_split_fixed(
"\" width=",
n = 2) %>%
# use first part of string
.[,1]]
baseStats
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
knitr::kable(baseStats)
knitr::kable(head(baseStats))
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::daveRevealSlideStyle(options = options))
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
figure() %>%
# layer to get .png from url as points
ly_image_url(
data = baseStats,
x = DexNo,
y = Total,
w = 10,
h = 20,
image_url = imgURL
)
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
rmarkdown::render("gotRCatchEmAll.Rmd", output_format = daveStyle::davePDFSlideStyle())
