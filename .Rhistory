install.packages("revealjs")
baseStats <-
# More easily extract pieces out of HTML documents using XPath and css selectors.
xml2::read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>%
rvest::html_node(
css = "div table"
) %>%
rvest::html_table()
library(rvest)
library(magrittr)
baseStats <-
# More easily extract pieces out of HTML documents using XPath and css selectors.
xml2::read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>%
rvest::html_node(
css = "div table"
) %>%
rvest::html_table()
rvest::html_table() # Parse an html table into a data frame.
baseStats <-
xml2::read_html( # Read HTML or XML.
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>%
rvest::html_node( # More easily extract pieces out of HTML documents using XPath and css selectors.
css = "div table"
) %>%
rvest::html_table() # Parse an html table into a data frame.
baseStats
head(baseStats)
library(data.table)
baseStats <- as.data.table(baseStats)
baseStats[, "" := NULL] # Remove second col with only "NA"
setnames(baseStats, 1:2, c("DexNo", "Pokemon")) # Rename cols 1 and 2 to something workable
baseStats
baseStats
library(stringr)
baseStats[, imgURL := read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>%
rvest::html_nodes(
css = "#mw-content-text img"
) %>%
# css to identify all strings for pokemon urls
stringr::str_split_fixed(
"src=\"",
n = 2
) %>% .[,2] %>%
# splits first part out then drops first part
stringr::str_split_fixed(
"\" width=",
n = 2) %>% .[,1]]
baseStats
baseStats[, imgURL := read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
)
]
library(stringr)
baseStats[, imgURL := read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>%
html_nodes(
css = "#mw-content-text img"
) %>% # css to identify all strings for pokemon urls
str_split_fixed(
"src=\"",
n = 2
) %>% .[,2] %>% # splits first part out then drops first part
str_split_fixed(
"\" width=",
n = 2) %>% .[,1]]
baseStats
baseStats[, imgURL := read_html(
x = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_base_stats_(Generation_I)"
) %>%
rvest::html_nodes(
css = "#mw-content-text img"
) %>% # css to identify all strings for pokemon urls
stringr::str_split_fixed(
"src=\"",
n = 2
) %>% .[,2] %>% # splits first part out then drops first part
stringr::str_split_fixed(
"\" width=",
n = 2) %>% .[,1]]
baseStats
boxParameter <- 5
plot(PCA$x, type = "n",
xlab = "Overall stats >",
ylab = "HP/Attack/Defense <> Speed/Special")
pngList <- list()
for(ii in 1:nrow(baseStats)){
tempName <- pokeTable[ii, "Name"]
tempPNG <- png::readPNG(
RCurl::getURLContent(pngURLs[ii]))
pngList[[tempName]] <- tempPNG
}
for(ii in 1:nrow(baseStats)){
tempName <- baseStats[ii, "Name"]
# tempPNG <- png::readPNG(
#   RCurl::getURLContent(pngURLs[ii]))
# pngList[[tempName]] <- tempPNG
return(tempName)
}
for(ii in 1:nrow(baseStats)){
tempName <- baseStats[ii, "Name"]
# tempPNG <- png::readPNG(
#   RCurl::getURLContent(pngURLs[ii]))
# pngList[[tempName]] <- tempPNG
}
ibrary(png)
library(RCurl)
pngList <- list()
library(png)
for(ii in 1:nrow(baseStats)){
tempName <- baseStats[ii, "Name"]
# tempPNG <- png::readPNG(
#   RCurl::getURLContent(pngURLs[ii]))
# pngList[[tempName]] <- tempPNG
}
for(ii in 1:nrow(baseStats)){
tempName <- baseStats[ii, "Name"]
tempPNG <- png::readPNG(
RCurl::getURLContent(pngURLs[ii]))
pngList[[tempName]] <- tempPNG
}
baseStats
pngList <- list()
for(ii in 1:nrow(baseStats)){
tempName <- baseStats[ii, "Name"]
tempPNG <- png::readPNG(
RCurl::getURLContent(imgURL[ii]))
pngList[[tempName]] <- tempPNG
}
baseStats
baseStats[1, imgURL]
baseStats[1, imgURL %>%
rvest::html_node("img")]
baseStats[1, imgURL %>%
rvest::html_nodes("img")]
baseStats[1, imgURL %>%
rvest::html_nodes("body img")]
baseStats[1, imgURL ]%>%
rvest::html_nodes("body img")
tmp <- baseStats[1, imgURL ]
rvest::html_nodes(tmp)
tmp
tmp <- "http://cdn.bulbagarden.net/upload/e/ec/001MS.png"
rvest::html_nodes(tmp)
rvest::html_nodes(x = tmp, css = "img")
tmp <- read.html("http://cdn.bulbagarden.net/upload/e/ec/001MS.png")
tmp <- read_html("http://cdn.bulbagarden.net/upload/e/ec/001MS.png")
rvest::html_nodes(x = tmp, css = "img")
tmp <- baseStats[1, read_html("http://cdn.bulbagarden.net/upload/e/ec/001MS.png") %>%
html_nodes("img")]
tmp
tmp <- baseStats[1, read_html("http://cdn.bulbagarden.net/upload/e/ec/001MS.png") %>%
html_nodes("body img")]
tmp
tmp <- baseStats[1, download.file(imgURL)]
baseStats
tmp <- baseStats[1, download.file(imgURL, destfile = paste0(POkemon,".png"))]
baseStats
tmp <- baseStats[1, download.file(imgURL, destfile = paste0(Pokemon,".png"))]
tmp <- baseStats[1, download.file(html_attr(imgURL), destfile = paste0(Pokemon,".png"))]
?html_session
tmp <- baseStats[1, html_session(imgURL)]
tmp
tmp <- baseStats[1, html_session(imgURL) %>% html_node("img")]
tmp <- baseStats[1, html_session(imgURL) %>% html_nodes("img")]
tmp <- baseStats[1, html_session(imgURL) %>% html_node()]
library(png)
baseStats
pngList <- list()
for(ii in 1:nrow(baseStats)){
tempName <- baseStats[ii, "Pokemon", with = FALSE]
tempPNG <- readPNG(getURLContent(imgURLs[ii]))
pngList[[tempName]] <- tempPNG
}
pngList <- list()
for(ii in 1:nrow(baseStats)){
tempName <- baseStats[ii, "Pokemon", with = FALSE]
tempPNG <- readPNG(getURLContent(imgURL[ii]))
pngList[[tempName]] <- tempPNG
}
baseStats
library(RCurl)
pngList <- list()
for(ii in 1:nrow(baseStats)){
tempName <- baseStats[ii, "Pokemon", with = FALSE]
tempPNG <- readPNG(getURLContent(imgURL[ii]))
pngList[[tempName]] <- tempPNG
}
tempName
baseStats
for(ii in 1:nrow(baseStats)){
tempName <- baseStats[ii, "Pokemon", with = FALSE]
tempPNG <- readPNG(getURLContent(baseStats$imgURL[ii]))
pngList[[tempName]] <- tempPNG
}
for(pkmn in 1:nrow(baseStats)){
tempName <- baseStats[pkmn, "Pokemon", with = FALSE]
tempPNG <- imgURL[pkmn]
# pngList[[tempName]] <- tempPNG
}
?html
tmp <- baseStats[1, read_html(imgURL)]
tmp
baseStats[1, read_html(imgURL) %>% html_node("body")]
baseStats[1, read_html(imgURL) %>% html_node("body")] %>%
html_attr("src")
library(png)
library(RCurl)
pngList <- list()
for(pkmn in 1:nrow(baseStats)){
tempName <- baseStats[pkmn, "Pokemon", with = FALSE]
readPNG(getURLContent(pngURLs[pkmn]))
pngList[[tempName]] <- tempPNG
# pngList[[tempName]] <- tempPNG
}
for(pkmn in 1:nrow(baseStats)){
tempName <- baseStats[pkmn, "Pokemon", with = FALSE]
readPNG(getURLContent(imgURL[pkmn]))
pngList[[tempName]] <- tempPNG
# pngList[[tempName]] <- tempPNG
}
baseStats[1, read_html(imgURL) %>% html_node("body")%>%
html_attr("src")]
baseStats[1, read_html(imgURL) %>% html_node("body")%>%
html_attrs("src")]
baseStats[1, read_html(imgURL) %>% html_node("body")]
baseStats[1, imgURL]
download.file("http://cdn.bulbagarden.net/upload/e/ec/001MS.png", destfile = "tmp.png")
download.file("http://cdn.bulbagarden.net/upload/e/ec/001MS.png", destfile = "tmp.png", mode = "wb")
baseStats[1:5, download.file(imgURL, destfile = "tmp.png", mode = "wb")]
baseStats[1:5, download.file(imgURL, destfile = paste0(.N,".png"), mode = "wb")]
?fread
fread("http://cdn.bulbagarden.net/upload/e/ec/001MS.png")
for(pkmn in baseStats[, Pokemon]){
print(pkmn)
}
for(pkmn in baseStats[, Pokemon]){
print(imgURL)
}
baseStats
for(pkmn in baseStats[, Pokemon]){
print(baseStats[pkmn, imgURL])
}
print(Attack)
for(pkmn in baseStats[, DexNo]){
print(baseStats[pkmn == DexNo, imgURL])
}
for(pkmn in baseStats[1, DexNo]){
download.file(baseStats[pkmn == DexNo, imgURL], destfile = "tmp.png", mode = "wb"))
}
for(pkmn in baseStats[1, DexNo]){
download.file(baseStats[pkmn == DexNo, imgURL], destfile = "tmp.png", mode = "wb")
}
for(pkmn in baseStats[1:2, DexNo]){
download.file(baseStats[pkmn == DexNo, imgURL], destfile = "tmp.png", mode = "wb")
}
for(pkmn in baseStats[1:2, DexNo]){
download.file(baseStats[pkmn == DexNo,
imgURL],
destfile = paste0(pkmn, ".png"),
mode = "wb")
}
baseStats[, DexNo]
for(pkmn in baseStats[, DexNo]){
download.file(baseStats[pkmn == DexNo,
imgURL],
destfile = paste0("/tmp", pkmn, ".png"),
mode = "wb")
}
for(pkmn in baseStats[, DexNo]){
download.file(baseStats[pkmn == DexNo,
imgURL],
destfile = paste0("/tmp/", pkmn, ".png"),
mode = "wb")
}
dir.create("./someonesPC/")
for(pkmn in baseStats[, DexNo]){
download.file(baseStats[pkmn == DexNo,
imgURL],
destfile = paste0("./someonesPC/", pkmn, ".png"),
mode = "wb")
}
for(pkmn in baseStats[, DexNo]){
download.file(baseStats[pkmn == DexNo,
imgURL],
destfile = paste0(pkmn, ".png"))
}
install.packages("rbokeh")
library(rbokeh)
ly_points(p, cars$speed, cars$dist)
p <- ly_points(p, cars$speed, cars$dist)
p<- figure()
p <- ly_points(p, cars$speed, cars$dist)
p
figure() %>% ly_points(data = baseStats,
x = Attack,
y = Defense)
figure() %>% ly_image_url(data = baseStats,
x = Attack,
y = Defense,
imgURL = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = Attack,
y = Defense,
imgage_URL = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = Attack,
y = Defense,
imgage_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = Attack,
y = Defense,
image_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Defense,
image_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense,
image_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
image_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
image_url = imgURL, anchor = "center")
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
image_url = imgURL,
hover = Pokemon)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = w,
h = h,
image_url = imgURL,
hover = Pokemon)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = w,
h = h,
image_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = 1,
h = 1,
image_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = 10,
h = 10,
image_url = imgURL)
figure() %>% ly_image_url(data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = 10,
h = 30,
image_url = imgURL)
figure() %>%
ly_image_url(
data = baseStats,
x = DexNo,
y = Attack + Defense + HP + Speed + Special,
w = 10,
h = 20,
image_url = imgURL
)
install.packages(slidiify)
install_github("slidify", "ramnathv")
devtools::install_github("slidify")
devtools::install_github("slidify", "ramnathv")
devtools::install_github(ramnathv/slidify)
devtools::install_github("ramnathv/slidify")
install.packages(c("BH", "curl", "devtools", "git2r", "httr", "installr", "jsonlite", "openssl", "palettetown", "plyr", "R6", "Rcpp", "rmarkdown", "rstudioapi", "rvest", "stringr", "tibble", "withr", "xml2"))
